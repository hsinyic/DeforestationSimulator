/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var landsatF7 = ee.ImageCollection("LANDSAT/LE7_L1T_TOA_FMASK"),
    gfcImage = ee.Image("UMD/hansen/global_forest_change_2015"),
    countries = ee.FeatureCollection("ft:1tdSwUL7MVpOauSgRzqVTOwdfy17KDbw-1d9omPw"),
    Pen10 = ee.FeatureCollection("ft:1cwFEmRV89tF2QxGZCQWH3o_Fn7PSfPVLpp1Djp05"),
    Pen90 = ee.FeatureCollection("ft:17sNwA_Hb3XB2XO5wDVOjUpRQ8RkoAQsL4m6XQHNL"),
    Pen00 = ee.FeatureCollection("ft:1NJ3I0Rt6gvHK1C90DMZV30KQfhQyBjJkJ6R_tW0O"),
    Pen05 = ee.FeatureCollection("ft:1PCQ6vmmijAn_MjfovMmxvBOr1UtcsZEemujetqft"),
    ma90 = ee.FeatureCollection("ft:1ClQZOLYbgQUpFlaj-IEM0H-HCYH2qgWB0IMgw67s"),
    ma10 = ee.FeatureCollection("ft:1qnUbN9G35ty03brJzVL_bvwur5r0CrAORkHwZSak"),
    ma05 = ee.FeatureCollection("ft:1_TjOWmEO3IJviMvrPnpmSf6-X3tbBCNg0rW8MZOb"),
    ma00 = ee.FeatureCollection("ft:1dZpd04fr-TNZV_5BlsT6GgmDHXTLqoDwH4jg59vX"),
    in00 = ee.FeatureCollection("ft:1UmFrgy4IPk2vAuqoQ84uLUoo87p03H81yq9fS4_L"),
    in05 = ee.FeatureCollection("ft:1NbhFw2CTXFSDK-DM45fWhiPT05iUWaMATGQJysin"),
    in10 = ee.FeatureCollection("ft:13TMkrpp7qsuJnbY1GsOEx4UkUQCrnJlgo2XuVcC2"),
    in90 = ee.FeatureCollection("ft:1dQMQUMmiArzbIAyqSdMzDfZpxyBI75uS0g1rOlru"),
    Peninsula_outline = ee.FeatureCollection("ft:1qXLCkXAj4shgixeHmj-yDVAYrVhtkF2iJ94OBp3N"),
    ma14 = ee.FeatureCollection("ft:1LptOCvF4_VEt_AXP4soYKZvlOxsd6LEZAThGLPeS");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// NOT IMPORTANT add name string for colors, so I don't have to input the colors   
var db= ('0000FF').toString();
var lb= ('#11ffff').toString();
var red=('ff510f').toString();
var lr = ('#ff8f7d').toString();
var dg= ('#196e0a').toString();
var yellow=('#fff832').toString();
var gr= ('#4cff62').toString();
var whi=('#f7f7f7').toString();
var black = ('#101010').toString();
var pink = ('#ff50f1').toString();
var scale = ee.Number(1000); 


// Data Processing 
var OP90_raster = Pen90.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var OP00_raster = Pen00.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var OP05_raster = Pen05.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var OP10_raster = Pen10.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var OP90_raster = ee.Image([0]).where(OP90_raster.eq(1), 1);
var OP00_raster = ee.Image([0]).where(OP00_raster.eq(1), 1).where(OP90_raster.eq(1), 1);
var OP05_raster = ee.Image([0]).where(OP05_raster.eq(1), 1).where(OP00_raster.eq(1), 1);
var OP10_raster = ee.Image([0]).where(OP10_raster.eq(1), 1).where(OP05_raster.eq(1), 1);
// Convert Gunarso vector maps to a raster, Sabah and Sarawak
var ma90_raster = ma90.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var ma00_raster = ma00.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var ma05_raster = ma05.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var ma10_raster = ma10.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var ma14_raster = ma14.reduceToImage({properties: ['TYPE'],reducer: ee.Reducer.first()});


var ma90_raster = ee.Image([0]).where(ma90_raster.eq(1), 1);
var ma00_raster = ee.Image([0]).where(ma00_raster.eq(1), 1).where(ma90_raster.eq(1), 1);
var ma05_raster = ee.Image([0]).where(ma05_raster.eq(1), 1).where(ma00_raster.eq(1), 1);
var ma10_raster = ee.Image([0]).where(ma10_raster.eq(1), 1).where(ma05_raster.eq(1), 1);
var ma14_raster = ee.Image([0]).where(ma14_raster.gte(1), 1); //Deal with inconsistencies later



// Convert Gunarso vector maps to a raster, Indonesia and PNG
var in90_raster = in90.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var in00_raster = in00.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var in05_raster = in05.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var in10_raster = in10.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var in90_raster = ee.Image([0]).where(in90_raster.eq(1), 1);
var in00_raster = ee.Image([0]).where(in00_raster.eq(1), 1).where(in90_raster.eq(1), 1);
var in05_raster = ee.Image([0]).where(in05_raster.eq(1), 1).where(in00_raster.eq(1), 1);
var in10_raster = ee.Image([0]).where(in10_raster.eq(1), 1).where(in05_raster.eq(1), 1);
var OP90 = ee.Image([0]).where(OP90_raster.eq(1), 1).where(ma90_raster.eq(1), 1).where(in90_raster.eq(1), 1).rename(['OP90']);
var OP00 = ee.Image([0]).where(OP00_raster.eq(1), 1).where(ma00_raster.eq(1), 1).where(in00_raster.eq(1), 1).rename(['OP00']);
var OP05 = ee.Image([0]).where(OP05_raster.eq(1), 1).where(ma05_raster.eq(1), 1).where(in05_raster.eq(1), 1).rename(['OP05']);
var OP10 = ee.Image([0]).where(OP10_raster.eq(1), 1).where(ma10_raster.eq(1), 1).where(in10_raster.eq(1), 1).rename(['OP10']);
var OP14 = ee.Image([0]).where(ma14_raster.eq(1), 1).where(ma10_raster.eq(1), 1).rename(['OP14']);
var inconsistency = ee.Image([0]).where(ma14_raster.eq(0).and(OP10.eq(1)), 1); 
Map.addLayer(inconsistency.updateMask(inconsistency), 
{min: 0, max: 1,palette:[whi, pink ]}, "inconsistency");


Map.addLayer(OP14.updateMask(OP14), {min: 0, max: 1,palette:[whi, red ]}, "OP14");
Map.addLayer(OP10.updateMask(OP10), {min: 0, max: 1,palette:[whi, black ]}, "OP10");
Map.addLayer(OP05.updateMask(OP05), {min: 0, max: 1,palette:[whi, db ]}, "OP05");
Map.addLayer(OP00.updateMask(OP00), {min: 0, max: 1,palette:[whi, gr ]}, "OP00");
Map.addLayer(OP90.updateMask(OP90), {min: 0, max: 1,palette:[lb, yellow ]}, "OP90");
var binary = ee.Image([0]).where(OP90.eq(1).and(OP10.eq(1)), 1).where((OP90.eq(0)).and(OP10.eq(1)),2 );
// Map.addLayer(binary, {min: 0, max: 2,palette:[ whi,gr , db]}, 'binary');





Map.setCenter(101.14837,3.88891, 6); // Malaysia, Penn