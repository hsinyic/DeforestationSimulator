/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var gfcImage = ee.Image("UMD/hansen/global_forest_change_2015"),
    countries = ee.FeatureCollection("ft:1tdSwUL7MVpOauSgRzqVTOwdfy17KDbw-1d9omPw"),
    Pen10 = ee.FeatureCollection("ft:1cwFEmRV89tF2QxGZCQWH3o_Fn7PSfPVLpp1Djp05"),
    Pen90 = ee.FeatureCollection("ft:17sNwA_Hb3XB2XO5wDVOjUpRQ8RkoAQsL4m6XQHNL"),
    Pen00 = ee.FeatureCollection("ft:1NJ3I0Rt6gvHK1C90DMZV30KQfhQyBjJkJ6R_tW0O"),
    Pen05 = ee.FeatureCollection("ft:1PCQ6vmmijAn_MjfovMmxvBOr1UtcsZEemujetqft"),
    Pen05_v2 = ee.FeatureCollection("ft:1WFl3go93KXh8Lk8ltOzMK2YBjIlaMeHPst1hod_b");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var lossYear = gfcImage.select(['lossyear']);
var lossImage = gfcImage.select(['loss']);
var gainImage = gfcImage.select(['gain']);
var forest = gfcImage.select(['treecover2000']);


var malaysia = countries.filterMetadata('Country', 'equals', 'Malaysia');

//mask out the area where there isn't a "loss year" mark
Map.addLayer(lossYear.clip(malaysia).updateMask(gfcImage.select(['lossyear'])),
             {'min': 0, 'max': 12, 'palette': ['0000FF', '00FF00', '00FFFF', 'FF0000']},
             'Forest Lost Year');


// Convert our vector map to a raster 
var OP90_raster = Pen90.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var OP00_raster = Pen00.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var OP05_raster = Pen05.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var OP10_raster = Pen10.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});

// Map.addLayer(OP10_raster, {min: 0, max: 1, palette: ['FF0000']}, 'Raster OP 2010');
// Map.addLayer(OP05_raster, {min: 0, max: 1, palette: ['00FFFF']}, 'Raster OP 2005');
// Map.addLayer(OP00_raster, {min: 0, max: 1, palette: ['00FF00']}, 'Raster OP 2000');
// Map.addLayer(OP90_raster, {min: 0, max: 1, palette: ['0000FF']}, 'Raster OP 1990');

var blank = lossYear.multiply(0);
var Gunarso = ee.Image([OP90_raster]);
Gunarso= Gunarso.addBands(OP00_raster).addBands(OP05_raster).
addBands(OP10_raster).rename(['OP90','OP00','OP05','OP10']);
for (var i = 2000; i < 2012; ++i){
  var LossInYear = lossYear.gte(i-2000).and(lossYear.lte(i+1-2000));
  var Hansenloss = blank.where(LossInYear.eq(1), 1);
  Gunarso = Gunarso.addBands(Hansenloss);
}

//Initiate monochromatic color layers for use later 
var OP_color = lossYear.multiply(0).add(4).rename(['Color_OP']); 
var NonOP_color = lossYear.multiply(0).add(10).rename(['Color_NonOP']); 
var F_color = lossYear.multiply(0).add(10).rename(['Color_F']); 
Gunarso = Gunarso.addBands([OP_color, NonOP_color, F_color]);

//Check that Gunarso has 1. All Gunarso OP layers 
//2. Hansen yearly data 3. Monocrhomatic color layers
print('collectionFromConstructor_Gunarso: ', Gunarso);


var OP2001 = Gunarso.expression('(OP2000==1 && OP2005==1) ? OP: OTH',  
        {
        'OP2000': Gunarso.select('OP00'),
        'OP2005': Gunarso.select('OP05'),
        'OP': Gunarso.select('Color_OP'),
        'OTH': Gunarso.select('Color_NonOP'),
        }
    );

print('op2001',OP2001)
Map.addLayer(OP2001.clip(malaysia).updateMask(OP2001), 
{min: 0, max: 12, palette: ['0000FF', '00FF00', '00FFFF', 'FF0000']}, 
'OP2001');

var decision2 = function(bef, aft, hansen, t){
  //bef: nearest gunarso layer in the past 
  //aft: nearest gunarso layer in the future 
  //hansen: forest loss year (0-12)
  //t is the year at which we are making decisions for 
  // var T= 2012 - t ; //T is goes from 0 to 2012, it is the current year 
  
  //@initiate an image where we can then add bands to it 
  // var Gunarso_test = ee.ImageCollection([T]);
  // print('Gunarso_test',Gunarso_test);
  
  //Analyze property of the input 
  print('bef',bef);
  print('hansen',hansen); 
  
  
  // a layer of hansen loss year, but everything in default zero 
  var p = hansen.multiply(0); 

  //@Conditional statement test 
  //aft.neq(bef)
  if(aft==='NULL'){
    print('hey 1'); 
    // the bug is that they will always come here, it selects whereever
    // Hansen has zero values is not defined 
    p = hansen.add(2);
  }
  else if(aft.neq(bef)){ //the program never comes here 
    print('I am finally here!');
    p = hansen.add(3);
  }
  else{ //the program never comes here either 
    p = hansen.add(1);
  }
  //Conditional test (this is corect) 
  if(1+2===2){
    print('oy');
  }
  else if(1+4===6){
    print('oy2');
  }
  else if(1+5===10){
    print('oy3');
  }
  else if(1+6===7){
    print('correct!!!!'); //it did come here 
  }
  return p;
};

var decision = function(bef, aft, t, p){
  var loss = lossYear.gte(p).and(lossYear.lte(p+1));
  return t.add(loss);
};


var OP0005 = decision2(OP00_raster, OP05_raster, lossYear, 2002);
print('OP0005', OP0005);
Map.addLayer(OP0005.clip(malaysia).updateMask(OP0005), 
{min: 0, max: 12, palette: ['0000FF', '00FF00', '00FFFF', 'FF0000']}, 
'Initial Classify');


//intersect this binary layer with Gunarso 
var i=0;
var j=1;
var lossInFirstIYear = lossYear.gte(i).and(lossYear.lte(i+1)); 
var OP_2001 = OP05_raster.where(lossInFirstIYear.eq(1), 0);
Map.addLayer(OP_2001, 
  {min: 0, max: 2, palette: ['0000FF', '00FF00', '00FFFF', 'FF0000']}, 'OP_2001');
print('OPAt2005', OP_2001.getInfo())
print('lossInFirst5Year', lossInFirstIYear.getInfo())


