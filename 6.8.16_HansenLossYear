/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var gfcImage = ee.Image("UMD/hansen/global_forest_change_2015"),
    Peninsula_outline = ee.FeatureCollection("ft:1qXLCkXAj4shgixeHmj-yDVAYrVhtkF2iJ94OBp3N"),
    Pen10 = ee.FeatureCollection("ft:1xabXcdjDWY8PCYLjAO6zH07XTczWVKqGcNVVQI3Y"),
    Pen05 = ee.FeatureCollection("ft:1YZK7dCxaKKF5WneTc3hcNyB1ss6nVRkl818pf7zI"),
    Pen90 = ee.FeatureCollection("ft:1zaZ7Z6NB0aGX5IfFTvWrVe3BJA5YrbCBfP85Y5de"),
    Pen00 = ee.FeatureCollection("ft:13VBea1Xy9bPFVVOGRGFT5gDA-Q8lE803AbNQyU5m");
/***** End of imports. If edited, may not auto-convert in the playground. *****/

Map.setCenter(102.10693359375, 3.973860975839102, 10);
var scale = ee.Number(500); 
var scale_square = scale.multiply(scale);
// ############
// # Define Statistical Functions
// ############
var pixelcount = function(image, shape, group){
  var Stat = image.addBands(image);
  var r = Stat.reduceRegion({
    reducer: ee.Reducer.count().group(1),
    scale: scale,
    geometry: shape
  });
  print(r);
  var list = ee.List(ee.Dictionary(r).get('groups'));
  return ee.Dictionary(list.get(group)).get('count');
};

var percentile_threshold = function(p){
  var output = costmap.clip(totalarea).reduceRegion({
    reducer: ee.Reducer.percentile([p]),
    geometry: totalarea,
    scale: 500
  });
  print(output);
  return ee.Number(output.get('cumulative_cost'));
  }; 

// ############
// # Step 1: Load data 
// # 1) from Hansen 
// # 2) draw boundaries around malaysia, indo, PNG
// # 3) Gunarso vector maps, converted to raster
// ############
var totalarea = Peninsula_outline;
var lossYear = gfcImage.select(['lossyear']).clip(totalarea);
var treecover2000 = gfcImage.select(['treecover2000']).clip(totalarea);
var blank = lossYear.multiply(0).rename(['blank']).clip(totalarea);

// //add color scheme 
var db= String('0000FF');
var lb= String('#11ffff');
var red=String('ff510f');
var lr = String("#ff8f7d");
var yellow=String('#fff832');
var gr= String('#4cff62');
var whi=String('#f7f7f7');
var black = String('#101010');
// Data Processing 
var OP90_raster = Pen90.reduceToImage({properties: ['Ha'],reducer: ee.Reducer.first()}).multiply(0).add(1);
var OP00_raster = Pen00.reduceToImage({properties: ['Ha'],reducer: ee.Reducer.first()}).multiply(0).add(1);
var OP05_raster = Pen05.reduceToImage({properties: ['Ha'],reducer: ee.Reducer.first()}).multiply(0).add(1);
var OP10_raster = Pen10.reduceToImage({properties: ['Ha'],reducer: ee.Reducer.first()}).multiply(0).add(1);
var OP90_raster = blank.where(OP90_raster.eq(1), 1);
var OP00_raster = blank.where(OP00_raster.eq(1), 1).where(OP90_raster.eq(1), 1);
var OP05_raster = blank.where(OP05_raster.eq(1), 1).where(OP00_raster.eq(1), 1);
var OP10_raster = blank.where(OP10_raster.eq(1), 1).where(OP05_raster.eq(1), 1);
var OP90 = blank.where(OP90_raster.eq(1), 1).rename(['OP90']);
var OP00 = blank.where(OP00_raster.eq(1), 1).rename(['OP00']);
var OP05 = blank.where(OP05_raster.eq(1), 1).rename(['OP05']);
var OP10 = blank.where(OP10_raster.eq(1), 1).rename(['OP10']);


// Iteration 
var lossYear = lossYear.where(lossYear.eq(0), 99).clip(totalarea);
var lossYear00_05 = lossYear.clip(totalarea); 
var Designated = blank.where(OP00.eq(0).and(OP05.eq(1)).and(lossYear.gt(5)), 1).clip(totalarea); 
var Target = ee.List([127560,131736,131990,125420,125982]);

var t=1; 
var OP = OP00.where(lossYear.lte(t),1);
var A_current = pixelcount(OP.eq(1), totalarea,1);
print(A_current);
var A_target = ee.Number(Target.get(t));//.divide(scale_square).multiply(10000);
print(A_target);
var A_expand = A_target.subtract(A_current); 
var A_designate = pixelcount(Designated.eq(1),totalarea, 1);
print(A_designate);
var Percentage = A_expand.divide(A_designate);
print('Percentage2', Percentage);
var source = OP;
source = source.updateMask(source);
var cost = blank.add(1).clip(totalarea); 
var cumulativeCost = cost.cumulativeCost({
    source: source,
    maxDistance: 50 * 1000 // 50 kilometers
  });
var costmap = blank.where(Designated.eq(1), cumulativeCost);
costmap = costmap.updateMask(costmap);
var N = percentile_threshold(Percentage); 
costmap = blank.where(costmap.lt(N),costmap).clip(totalarea) ;
costmap = costmap.updateMask(costmap);
Designated = Designated.where(costmap.neq(0), 0); 
lossYear00_05 = lossYear00_05.where(costmap.neq(0), t);


t=2; 
var OP = OP00.where(lossYear.lte(t),1);
var A_current = pixelcount(OP.eq(1), totalarea,1);
print(A_current);
var A_target = ee.Number(Target.get(t));//.divide(scale_square).multiply(10000);
print(A_target);
var A_expand = A_target.subtract(A_current); 
var A_designate = pixelcount(Designated.eq(1),totalarea, 1);
print(A_designate);
var Percentage = A_expand.divide(A_designate);
print('Percentage2', Percentage);
var source = OP;
source = source.updateMask(source);
var cost = blank.add(1).clip(totalarea); 
var cumulativeCost = cost.cumulativeCost({
    source: source,
    maxDistance: 50 * 1000 // 50 kilometers
  });
var costmap = blank.where(Designated.eq(1), cumulativeCost);
costmap = costmap.updateMask(costmap);
var N = percentile_threshold(Percentage); 
costmap = blank.where(costmap.lt(N),costmap).clip(totalarea) ;
costmap = costmap.updateMask(costmap);
Designated = Designated.where(costmap.neq(0), 0); 
lossYear00_05 = lossYear00_05.where(costmap.neq(0), t);

