/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = /* color: 0B4A8B */ee.Geometry.Polygon(
        [[[109.22882089927202, -0.22109924800017322],
          [110.02807600996994, -0.3433206508155334],
          [109.41421499807848, -0.09338383479703502],
          [109.20135503107304, -0.09613041859835043]]]),
    fusionTable = ee.FeatureCollection("ft:1Q-5XgXQpAeRhILPoPTx8gnGTzUpSJx-EtKu_BCw");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Get just the Indonesia feature.
var countries = ee.FeatureCollection('ft:1tdSwUL7MVpOauSgRzqVTOwdfy17KDbw-1d9omPw');
var indonesia = countries.filterMetadata('Country', 'equals', 'Indonesia');

// Load up the oil palm concessions.
var oilPalm = ee.FeatureCollection('ft:1Q-5XgXQpAeRhILPoPTx8gnGTzUpSJx-EtKu_BCw', 'geometry');

// Create a feature collection that is just oil palm concessions inside Indonesia.
var oilPalmInIndonesia = oilPalm.filterBounds(indonesia);

// Get forest cover in Indonesia.
var gfcImage = ee.Image('UMD/hansen/global_forest_change_2013');
var coverImage = gfcImage.select(['treecover2000']);

Map.addLayer(coverImage.clip(indonesia),
             {'min': 0, 'max': 100, 'palette': ['0000FF', '00FF00', '00FFFF', 'FF0000']},
             'Forest Cover 2000');
             
// Make an image out of the population attribute and display it.
var opRaster = oilPalmInIndonesia
  .filter(ee.Filter.neq('cartodb_id', null))
  .reduceToImage({
    properties: ['cartodb_id'],
    reducer: ee.Reducer.first()
});

Map.addLayer(opRaster, {min: 0, max: 1000000, palette: ['0000FF', '00FF00', '00FFFF', 'FF0000']});

// Export the image, specifying scale and region.
Export.image(opRaster, 'exportImageExample', {
  scale: 30,
  region: geometry
});
