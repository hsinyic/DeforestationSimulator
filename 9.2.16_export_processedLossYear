/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var gfcImage = ee.Image("UMD/hansen/global_forest_change_2015"),
    countries = ee.FeatureCollection("ft:1tdSwUL7MVpOauSgRzqVTOwdfy17KDbw-1d9omPw"),
    Pen10 = ee.FeatureCollection("ft:1cwFEmRV89tF2QxGZCQWH3o_Fn7PSfPVLpp1Djp05"),
    Pen90 = ee.FeatureCollection("ft:17sNwA_Hb3XB2XO5wDVOjUpRQ8RkoAQsL4m6XQHNL"),
    Pen00 = ee.FeatureCollection("ft:1NJ3I0Rt6gvHK1C90DMZV30KQfhQyBjJkJ6R_tW0O"),
    Pen05 = ee.FeatureCollection("ft:1PCQ6vmmijAn_MjfovMmxvBOr1UtcsZEemujetqft"),
    ma90 = ee.FeatureCollection("ft:1ClQZOLYbgQUpFlaj-IEM0H-HCYH2qgWB0IMgw67s"),
    ma10 = ee.FeatureCollection("ft:1qnUbN9G35ty03brJzVL_bvwur5r0CrAORkHwZSak"),
    ma05 = ee.FeatureCollection("ft:1_TjOWmEO3IJviMvrPnpmSf6-X3tbBCNg0rW8MZOb"),
    ma00 = ee.FeatureCollection("ft:1dZpd04fr-TNZV_5BlsT6GgmDHXTLqoDwH4jg59vX"),
    in00 = ee.FeatureCollection("ft:1UmFrgy4IPk2vAuqoQ84uLUoo87p03H81yq9fS4_L"),
    in05 = ee.FeatureCollection("ft:1NbhFw2CTXFSDK-DM45fWhiPT05iUWaMATGQJysin"),
    in10 = ee.FeatureCollection("ft:13TMkrpp7qsuJnbY1GsOEx4UkUQCrnJlgo2XuVcC2"),
    in90 = ee.FeatureCollection("ft:1dQMQUMmiArzbIAyqSdMzDfZpxyBI75uS0g1rOlru"),
    lossYear_processed = ee.Image("users/6GP6PM63OKTGEO6YIDC6BKJF/lossYear_RiauPartIII");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
Map.setCenter(101.08245301691568, 0.7909959458718788, 8);// Riau 
// Map.setCenter(101.436767578125, 0.5232166048991478, 9); //PekanBaru, Indo 
// Map.setCenter(101.964111328125, -1.5324100450044358, 8); //Bungo 
// Map.setCenter( 102.8704833984375, -1.7245930431979002, 8);
// Map.setCenter(102.10693359375, 3.973860975839102, 9);
// Map.setCenter(102.59239196777344,3.94029555672408, 9); // Malaysia Penninsula
// Map.setCenter(101.14837646484375,3.888917295949231, 12); // Malaysia, Penn
// Map.setCenter(104.9853515625, -5.0909441750333855, 9) ;// Lampung
// Map.setCenter(114.43359375,-1.054627942275887, 6);// Kalimantan 
// Map.setCenter(96.6357421875, 4.718777551249855, 8);// Aceh
// Map.setCenter(101.162109375, -1.8824432269136342, 6);// Barat
var printclass = function(t, folder){
  var year = t.toString();
  t= ee.Number(t).subtract(2000);
  var img = ee.Image(folder.get(t));
  var taskname = ee.String(year).cat(ee.String('Riau_PartIII_v2'));
  export_image = export_image.addBands(img);
  Map.addLayer(img, {min: 0, max: 6,
    palette:[ lb, db, gr,  yellow, red, whi, db]}, year);
  // Export.image.toDrive({
  //   image: img,
  //   description: taskname.getInfo(),
  //   scale: 100,
  //   region: totalarea_outline,
  //   maxPixels: 1e13
  // });

  return(3);
};
// NOT IMPORTANT add name string for colors, so I don't have to input the colors   
var db= ('0000FF').toString();
var lb= ('#11ffff').toString();
var red=('ff510f').toString();
var lr = ('#ff8f7d').toString();
var dg= ('#196e0a').toString();
var yellow=('#fff832').toString();
var gr= ('#4cff62').toString();
var whi=('#f7f7f7').toString();
var black = ('#101010').toString();
var pink = ('#ff50f1').toString();
var scale = ee.Number(1000); 


var Indonesia_2 = ee.FeatureCollection('ft:1Nh-DWDQzC4Wvh79jOZvNrSknlVYhCY4KUmMLK3V7', 'geometry');
var Sumatera_Barat_2 = Indonesia_2.filterMetadata('name', 'equals', 'Sumatera barat');
var Jambi_2 = Indonesia_2.filterMetadata('name', 'equals', 'Jambi');
var Riau_2 = Indonesia_2.filterMetadata('name', 'equals', 'Riau');
var Aceh_2 = Indonesia_2.filterMetadata('name', 'equals', 'Aceh');

var Indonesia_1 = ee.FeatureCollection('ft:1BIvH58CL17YCBkZe4Nmb3m27Ngcl2f-w-oB8zWzk', 'geometry');
var Jambi = Indonesia_1.filterMetadata('NAME_1', 'equals', 'Jambi'); 
var Lampung = Indonesia_1.filterMetadata('NAME_1', 'equals', 'Lampung');
var Sumatera_Selatan = Indonesia_1.filterMetadata('NAME_1', 'equals', 'Sumatera Selatan'); 
var Riau = Indonesia_1.filterMetadata('NAME_1', 'equals', 'Riau');
var Aceh = Indonesia_1.filterMetadata('NAME_1', 'equals', 'Aceh');
var Sumatera_Utara = Indonesia_1.filterMetadata('NAME_1', 'equals', 'Sumatera Utara');
var Sumatera_Barat = Indonesia_1.filterMetadata('NAME_1', 'equals', 'Sumatera Barat');
var Bengkulu = Indonesia_1.filterMetadata('NAME_1', 'equals', 'Bengkulu');
var Sumatra = Jambi
.merge(Riau)
.merge(Lampung)
.merge(Sumatera_Selatan)
.merge(Aceh)
.merge(Sumatera_Utara)
.merge(Sumatera_Barat)
.merge(Bengkulu);


var addprovinces = function(name, prev){
  name = ee.String(name);
  prev = ee.FeatureCollection(prev);
  return ee.FeatureCollection(prev
          .merge(Indonesia_1.filterMetadata('NAME_2', 'equals', name)));
};



var R1 =  ee.List(['Indragiri Hulu','Kuantan Singingi' ])
          .iterate(addprovinces, Indonesia_1.filterMetadata('NAME_2', 'equals', 'Indragiri Hilir'));
var R2  =  ee.List(['Rokan Hilir','Bengkalis', 'Dumai'])//,'Dumai','Siak'])
          .iterate(addprovinces, Indonesia_1.filterMetadata('NAME_2', 'equals','Rokan Hulu' ));
var R3  =  ee.List(['Siak', 'Kampar', 'Pelalawan'])
          .iterate(addprovinces, Indonesia_1.filterMetadata('NAME_2', 'equals','Pekan Baru' ));



var totalarea = ee.FeatureCollection(R1);
var totalarea_raster = totalarea.reduceToImage({properties: ['ID_0'],reducer: ee.Reducer.first()}); // for Indonesia_1
var totalarea_outline = totalarea.geometry().bounds();


//Import Hansen Global Data set 
var lossYear = gfcImage.select(['lossyear']).clip(totalarea_outline);
lossYear = lossYear.where(lossYear.eq(0), 99).add(2000);
var treecover2000 = gfcImage.select(['treecover2000']).clip(totalarea_outline);
var blank = ee.Image([0]).rename(['blank']).clip(totalarea_outline);

//Import Vector Data  
var OP90_raster = Pen90.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var OP00_raster = Pen00.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var OP05_raster = Pen05.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var OP10_raster = Pen10.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var OP90_raster = blank.where(OP90_raster.eq(1), 1);
var OP00_raster = blank.where(OP00_raster.eq(1), 1).where(OP90_raster.eq(1), 1);
var OP05_raster = blank.where(OP05_raster.eq(1), 1).where(OP00_raster.eq(1), 1);
var OP10_raster = blank.where(OP10_raster.eq(1), 1).where(OP05_raster.eq(1), 1);
// Convert Gunarso vector maps to a raster, Sabah and Sarawak
var ma90_raster = ma90.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var ma00_raster = ma00.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var ma05_raster = ma05.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var ma10_raster = ma10.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var ma90_raster = blank.where(ma90_raster.eq(1), 1);
var ma00_raster = blank.where(ma00_raster.eq(1), 1).where(ma90_raster.eq(1), 1);
var ma05_raster = blank.where(ma05_raster.eq(1), 1).where(ma00_raster.eq(1), 1);
var ma10_raster = blank.where(ma10_raster.eq(1), 1).where(ma05_raster.eq(1), 1);
// Convert Gunarso vector maps to a raster, Indonesia and PNG
var in90_raster = in90.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var in00_raster = in00.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var in05_raster = in05.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var in10_raster = in10.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var in90_raster = blank.where(in90_raster.eq(1), 1);
var in00_raster = blank.where(in00_raster.eq(1), 1).where(in90_raster.eq(1), 1);
var in05_raster = blank.where(in05_raster.eq(1), 1).where(in00_raster.eq(1), 1);
var in10_raster = blank.where(in10_raster.eq(1), 1).where(in05_raster.eq(1), 1);
var OP90 = blank.where(OP90_raster.eq(1), 1).where(ma90_raster.eq(1), 1).where(in90_raster.eq(1), 1).rename(['OP90']);
var OP00 = blank.where(OP00_raster.eq(1), 1).where(ma00_raster.eq(1), 1).where(in00_raster.eq(1), 1).rename(['OP00']);
var OP05 = blank.where(OP05_raster.eq(1), 1).where(ma05_raster.eq(1), 1).where(in05_raster.eq(1), 1).rename(['OP05']);
var OP10 = blank.where(OP10_raster.eq(1), 1).where(ma10_raster.eq(1), 1).where(in10_raster.eq(1), 1).rename(['OP10']);
Map.addLayer(OP10.updateMask(OP10), {min: 0, max: 1,palette:[whi, black ]}, "OP10");
Map.addLayer(OP05.updateMask(OP05), {min: 0, max: 1,palette:[whi, db ]}, "OP05");
Map.addLayer(OP00.updateMask(OP00), {min: 0, max: 1,palette:[whi, gr ]}, "OP00");
Map.addLayer(OP90.updateMask(OP90), {min: 0, max: 1,palette:[lb, yellow ]}, "OP90");


var Gunarso = ee.Image([OP90, OP00, OP05,OP10, treecover2000,blank]);


// ############
// # Step 3: Preliminary data processing 
// # 1) Create 2000/2005 Basemap  
// # 2) Mark inconsistencies for "NOP>OP, but no lossevents in between"
// # 3) Append the categorical maps, basemaps, and new lossyear layers 
// #    (00-05, 05-10) to Gunarso_intermediate band
// ############

// code NF, F, OPR, OP into numbers 
var NF_color = 1;
var F_color = 2;
var OPReplant_color = 3; 
var OP_color = 4; 
var NOP_color = 5;
var OTH_color = 6;
// Create year_2000 and year_2005 classified layer of OP, F, NF  
var year_2000 = Gunarso.expression(
'(OP00 ==1)? OP\
  :((OP00==0) && treecover2000>=30)? F\
    :((OP00==0)&& treecover2000<30)? NF\
      :OTH',
    {  
      'OP': Gunarso.select('blank').add(OP_color),
      'F': Gunarso.select('blank').add(F_color),
      'NF': Gunarso.select('blank').add(NF_color),
      'OTH': Gunarso.select('blank').add(OTH_color),
      'OP00': Gunarso.select('OP00'),
      'treecover2000': Gunarso.select('treecover2000')
    }
).rename(['year_2000']);



// #########################a
// #Step4 : Create annual maps (stored in Gunarso_final),  2000 <= t <= 2010
// #########################
var Gunarso_intermediate = ee.Image([lossYear_processed.rename(['lossYear'])]);
Gunarso_intermediate= Gunarso_intermediate.addBands([year_2000, blank, OP00, OP05, OP10, OP90 ]);

var yr = ee.List.sequence(2000, 2010, 1);
var annual = function(t){
  var timestamp = t.toString();
  t= ee.Number(t);
  var lossyear = lossYear; 
  // var basemap_intermediate = ee.Algorithms.If(t.gte(2000), year_2000, year_1990);
  // basemap_intermediate = ee.Image(basemap_intermediate);
  // var basemap = ee.Algorithms.If(t.gte(2005), year_2005, basemap_intermediate);
  // basemap = ee.Image(basemap);
  // var aftermap_intermediate = ee.Algorithms.If(t.gte(2000), year_2000, year_1990);
  // aftermap_intermediate = ee.Image(aftermap_intermediate);
  // var aftermap = ee.Algorithms.If(t.gte(2005), year_2005, aftermap_intermediate);
  // aftermap = ee.Image(aftermap);

  var basemap = year_2000;
  var executeOP_OP = Gunarso_intermediate.expression(
  'lossYear==t && OP90 == 1 ? OPR\
    :lossYear==t && OP90 == 0 ? OP\
    :(lossYear>t || lossYear<t) ? OP\
    : OTH',
      {  
        'OP': Gunarso_intermediate.select('blank').add(OP_color),
        'OPR': Gunarso_intermediate.select('blank').add(OPReplant_color),
        'lossYear': Gunarso_intermediate.select('lossYear'),
        'OP90': Gunarso_intermediate.select('OP90'),
        'OTH': Gunarso_intermediate.select('blank').add(OTH_color),
        't': t,
      }
  );

  var executeNOP_OP = Gunarso_intermediate.expression(
    // 'lossYear>t && basemap==F_color? F\
    //   : lossYear>t && basemap==NF_color?NF\
    'lossYear>t ? basemap\
        : lossYear<=t? OP\
          :OTH',
      {  
        'F': Gunarso_intermediate.select('blank').add(F_color),
        'OP': Gunarso_intermediate.select('blank').add(OP_color),
        'NF': Gunarso_intermediate.select('blank').add(NF_color),
        'OTH': Gunarso_intermediate.select('blank').add(OTH_color),
        'lossYear': Gunarso_intermediate.select('lossYear'),
        'basemap': Gunarso_intermediate.select('year_2000'),
        't': t,
        'NF_color': NF_color,
        'F_color': F_color
      }
  );
  var executeNOP_NOP = Gunarso_intermediate.expression(
  ' basemap==F_color && (lossYear>t || lossYear==2099)? F\
    :basemap==F_color && (lossYear<=t && lossYear<2099)? NF\
          :basemap==NF_color ? NF\
            :OTH',
      {  
        'F': Gunarso_intermediate.select('blank').add(F_color),
        'NF': Gunarso_intermediate.select('blank').add(NF_color),
        'OTH': Gunarso_intermediate.select('blank').add(OTH_color),
        'lossYear': Gunarso_intermediate.select('lossYear'),
        'basemap': Gunarso_intermediate.select('year_2000'),
        't': t,
        'NF_color': NF_color,
        'F_color': F_color
      }
  );
  var yearmap = blank
  .where(OP00.eq(1).and(OP10.eq(1)),ee.Image(executeOP_OP))
  .where(OP00.eq(0).and(OP10.eq(1)),ee.Image(executeNOP_OP))
  .where(OP00.eq(0).and(OP10.eq(0)),ee.Image(executeNOP_NOP));
  
  var final_yearmap = blank.where(totalarea_raster.neq(0), ee.Image(yearmap));
  return final_yearmap;
};


var Gunarso = yr.map(annual);
var export_image = ee.Image([0]);
var t=2010; var p0= printclass(t, Gunarso);
t=2009; p0= printclass(t, Gunarso);
t=2008; p0= printclass(t, Gunarso);
t=2007; p0= printclass(t, Gunarso);
t=2006; p0= printclass(t, Gunarso);
t=2005; p0= printclass(t, Gunarso);
t=2004; p0= printclass(t, Gunarso);
t=2003; p0= printclass(t, Gunarso);
t=2002; p0= printclass(t, Gunarso);
t=2001; p0= printclass(t, Gunarso);
t=2000; p0= printclass(t, Gunarso);



