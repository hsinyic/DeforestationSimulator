/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = /* color: bf04c2 */ee.Geometry.MultiPoint(),
    gfcImage = ee.Image("UMD/hansen/global_forest_change_2015"),
    countries = ee.FeatureCollection("ft:1tdSwUL7MVpOauSgRzqVTOwdfy17KDbw-1d9omPw"),
    Pen10 = ee.FeatureCollection("ft:1cwFEmRV89tF2QxGZCQWH3o_Fn7PSfPVLpp1Djp05"),
    Pen05 = ee.FeatureCollection("ft:12a-k5uoK8bI9RWsPYlBsrxDQajV4RwS4P_iOC8rP"),
    Pen00 = ee.FeatureCollection("ft:1eb9ukc3v3tM_xvezzPR8PJdkQKuh977Ej_XxwL_Q"),
    Pen90 = ee.FeatureCollection("ft:17sNwA_Hb3XB2XO5wDVOjUpRQ8RkoAQsL4m6XQHNL");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Get just the Malaysia feature.
var lossYear = gfcImage.select(['lossyear']);
var lossImage = gfcImage.select(['loss']);
var gainImage = gfcImage.select(['gain']);
var forest = gfcImage.select(['treecover2000']);


//Define country boundary (Malaysia only)
var malaysia = countries.filterMetadata('Country', 'equals', 'Malaysia');



//original masking script
/*
ee.Image('UMD/hansen/global_forest_change_2013').select(['treecover2000']);
Map.addLayer(ee.Image('UMD/hansen/global_forest_change_2013')
  .updateMask(ee.Image('UMD/hansen/global_forest_change_2013').select(['treecover2000'])),
    {bands: ['treecover2000'], palette: '000000, 00FF00', min: [0], max: [100]});
*/

//mask out the area where there isn't a "loss year" mark
lossYear1 = lossYear.clip(malaysia).updateMask(gfcImage.select(['lossyear']))
Map.addLayer(lossYear1,
             {'min': 0, 'max': 12, 'palette': ['0000FF', '00FF00', '00FFFF', 'FF0000']},
             'Forest Lost Year');

forest_mask = forest.clip(malaysia).updateMask(gfcImage.select(['treecover2000']))
Map.addLayer(forest_mask,
             {'min': 0, 'max': 100, 'palette': ['0000FF', '00FF00', '00FFFF', 'FF0000']},
             'Forest Cover 2000');


// Convert our vector map to a raster 
var OP90_raster = Pen90
  .reduceToImage({
    properties: ['cat'],
    reducer: ee.Reducer.first()
});
var OP00_raster = Pen00
  .reduceToImage({
    properties: ['cat'],
    reducer: ee.Reducer.first()
});
var OP05_raster = Pen05
  .reduceToImage({
    properties: ['cat'],
    reducer: ee.Reducer.first()
});
var OP10_raster = Pen10
  .reduceToImage({
    properties: ['cat'],
    reducer: ee.Reducer.first()
});

Map.addLayer(OP90_raster, {min: 0, max: 1, palette: ['#fff707']}, 'Raster OP 1990');
Map.addLayer(OP00_raster, {min: 0, max: 1, palette: ['#ff9900']}, 'Raster OP 2000');
Map.addLayer(OP05_raster, {min: 0, max: 1, palette: ['#ff9900']}, 'Raster OP 2005');
Map.addLayer(OP10_raster, {min: 0, max: 1, palette: ['#ff9900']}, 'Raster OP 2010');




//
var lossInFirst5Year = lossYear.gte(0).and(lossYear.lte(5)); 
var OPAt2005 = OP00_raster.where(lossInFirst5Year.eq(1), 0);
var vis = {'min': 0, 'max': 100, 'palette': '000000, 00FF00'};


Map.addLayer(OPAt2005, {min: 0, max: 2, palette: ['0000FF', '00FF00', '00FFFF', 'FF0000']}, 'OPAt2001');






// Export the image, specifying scale and region.
Export.image(OPAt2005, 'exportImageExample', {
  scale: 30,
  region: geometry
});


