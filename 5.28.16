/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var gfcImage = ee.Image("UMD/hansen/global_forest_change_2015"),
    countries = ee.FeatureCollection("ft:1tdSwUL7MVpOauSgRzqVTOwdfy17KDbw-1d9omPw"),
    Pen10 = ee.FeatureCollection("ft:1cwFEmRV89tF2QxGZCQWH3o_Fn7PSfPVLpp1Djp05"),
    Pen90 = ee.FeatureCollection("ft:17sNwA_Hb3XB2XO5wDVOjUpRQ8RkoAQsL4m6XQHNL"),
    Pen00 = ee.FeatureCollection("ft:1NJ3I0Rt6gvHK1C90DMZV30KQfhQyBjJkJ6R_tW0O"),
    Pen05 = ee.FeatureCollection("ft:1PCQ6vmmijAn_MjfovMmxvBOr1UtcsZEemujetqft"),
    ma90 = ee.FeatureCollection("ft:1ClQZOLYbgQUpFlaj-IEM0H-HCYH2qgWB0IMgw67s"),
    ma10 = ee.FeatureCollection("ft:1qnUbN9G35ty03brJzVL_bvwur5r0CrAORkHwZSak"),
    ma05 = ee.FeatureCollection("ft:1_TjOWmEO3IJviMvrPnpmSf6-X3tbBCNg0rW8MZOb"),
    ma00 = ee.FeatureCollection("ft:1dZpd04fr-TNZV_5BlsT6GgmDHXTLqoDwH4jg59vX"),
    in00 = ee.FeatureCollection("ft:1UmFrgy4IPk2vAuqoQ84uLUoo87p03H81yq9fS4_L"),
    in05 = ee.FeatureCollection("ft:1NbhFw2CTXFSDK-DM45fWhiPT05iUWaMATGQJysin"),
    in10 = ee.FeatureCollection("ft:13TMkrpp7qsuJnbY1GsOEx4UkUQCrnJlgo2XuVcC2"),
    in90 = ee.FeatureCollection("ft:1dQMQUMmiArzbIAyqSdMzDfZpxyBI75uS0g1rOlru"),
    Peninsula_outline = ee.FeatureCollection("ft:1qXLCkXAj4shgixeHmj-yDVAYrVhtkF2iJ94OBp3N"),
    geometry = /* color: 98ff00 */ee.Geometry.Point([102.10693359375, 3.973860975839102]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
Map.setCenter(102.10693359375, 3.973860975839102, 5);
//Verify Statistics, turn all nonzero pixels into a value 
var pixelcount = function(image, shape){
  var Stat = image.addBands(image);
  var r = Stat.reduceRegion({
    reducer: ee.Reducer.count().group(1),
    scale: 500,
    geometry: shape
  });
  return r; 
};
var area = function(image, shape){
  var areaImage = image.multiply(ee.Image.pixelArea());
  var stats = areaImage.reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: shape,
    maxPixels: 8e8
  });
  // return stats.get('cumulative_cost');
  return stats;
};

// ############
// # Step 1: Load data 
// # 1) from Hansen 
// # 2) draw boundaries around malaysia, indo, PNG
// # 3) Gunarso vector maps, converted to raster
// ############
var malaysia = countries.filterMetadata('Country', 'equals', 'Malaysia');
var indonesia = countries.filterMetadata('Country', 'equals', 'Indonesia');
var PNG = countries.filterMetadata('Country', 'equals', 'Papua New Guinea');
var totalarea = malaysia.merge(indonesia).merge(PNG);

var lossYear = gfcImage.select(['lossyear']);
var treecover2000 = gfcImage.select(['treecover2000']);
var nodata = gfcImage.select(['datamask']);
var blank = lossYear.multiply(0).rename(['blank']).clip(totalarea);

// //add color scheme 
var db= String('0000FF');
var lb= String('#11ffff');
var red=String('ff510f');
var yellow=String('#fff832');
var gr= String('#4cff62');
var whi=String('#181716');

// show lossyear, and where lossyear = 0 
Map.addLayer(lossYear.clip(totalarea).updateMask(lossYear),
            {'min': 0, 'max': 14, 'palette': ['0000FF', '00FF00', '00FFFF', 'FF0000']},
            'Hansen Forest Lost Year');

// Convert Gunarso vector maps to a raster, Peninsula
var OP90_raster = Pen90.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var OP00_raster = Pen00.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var OP05_raster = Pen05.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var OP10_raster = Pen10.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});



var OP90_raster = blank.where(OP90_raster.eq(1), 1);
var OP00_raster = blank.where(OP00_raster.eq(1), 1).where(OP90_raster.eq(1), 1);
var OP05_raster = blank.where(OP05_raster.eq(1), 1).where(OP00_raster.eq(1), 1);
var OP10_raster = blank.where(OP10_raster.eq(1), 1).where(OP05_raster.eq(1), 1);

// Convert Gunarso vector maps to a raster, Sabah and Sarawak
var ma90_raster = ma90.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var ma00_raster = ma00.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var ma05_raster = ma05.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var ma10_raster = ma10.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});

var ma90_raster = blank.where(ma90_raster.eq(1), 1);
var ma00_raster = blank.where(ma00_raster.eq(1), 1).where(ma90_raster.eq(1), 1);
var ma05_raster = blank.where(ma05_raster.eq(1), 1).where(ma00_raster.eq(1), 1);
var ma10_raster = blank.where(ma10_raster.eq(1), 1).where(ma05_raster.eq(1), 1);

// Convert Gunarso vector maps to a raster, Indonesia and PNG
var in90_raster = in90.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var in00_raster = in00.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var in05_raster = in05.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});
var in10_raster = in10.reduceToImage({properties: ['cat'],reducer: ee.Reducer.first()});

var in90_raster = blank.where(in90_raster.eq(1), 1);
var in00_raster = blank.where(in00_raster.eq(1), 1).where(in90_raster.eq(1), 1);
var in05_raster = blank.where(in05_raster.eq(1), 1).where(in00_raster.eq(1), 1);
var in10_raster = blank.where(in10_raster.eq(1), 1).where(in05_raster.eq(1), 1);


// Revise to make sure NOP-OP scenarios is not possible 
var OP90 = blank.where(OP90_raster.eq(1), 1).where(ma90_raster.eq(1), 1).where(in90_raster.eq(1), 1).rename(['OP90']).clip(totalarea);
var OP00 = blank.where(OP00_raster.eq(1), 1).where(ma00_raster.eq(1), 1).where(in00_raster.eq(1), 1).rename(['OP00']).clip(totalarea);
var OP05 = blank.where(OP05_raster.eq(1), 1).where(ma05_raster.eq(1), 1).where(in05_raster.eq(1), 1).rename(['OP05']).clip(totalarea);
var OP10 = blank.where(OP10_raster.eq(1), 1).where(ma10_raster.eq(1), 1).where(in10_raster.eq(1), 1).rename(['OP10']).clip(totalarea);
// Map.addLayer(OP10_raster, {min: 0, max: 1, palette: ['FF0000']}, 'Gunarso OP 2010');
// Map.addLayer(OP05_raster, {min: 0, max: 1, palette: ['00FFFF']}, 'Gunarso OP 2005');
// Map.addLayer(OP00_raster, {min: 0, max: 1, palette: ['00FF00']}, 'Gunarso OP 2000');
// Map.addLayer(OP90_raster, {min: 0, max: 1, palette: ['0000FF']}, 'Gunarso OP 1990');
print('Gunarso image collection: ', Gunarso);

// ####################
// # Step 2: Categorical map for 1990-2000, 2000-2005, 2005-2010 
// ####################
var Gunarso = ee.Image([lossYear]);
Gunarso= Gunarso.addBands([OP90, OP00, OP05,OP10, treecover2000,blank]);


//Define transition variables
var NOP_NOP= 1;//NonOP to NonOP 
var NOP_OP= 2;//NonOP to OP
var OP_NOP= 3;//OP to NonOP
var OP_OP= 4;//OP to OP

var OP_90_00 = Gunarso.expression(
  "(OP1990==1 && OP2000==1) ? OP_OP \
    : (OP1990==1 && OP2000==0) ? OP_NOP \
      :(OP1990==0 && OP2000==0) ? NOP_NOP \
        : NOP_OP", 
        {
        'OP1990': Gunarso.select('OP90'),
        'OP2000': Gunarso.select('OP00'),
        'OP_OP': Gunarso.select('blank').add(OP_OP),
        'OP_NOP': Gunarso.select('blank').add(OP_NOP),
        'NOP_NOP': Gunarso.select('blank').add(NOP_NOP),
        'NOP_OP': Gunarso.select('blank').add(NOP_OP),
        }
    ).rename(['OP_90_00']);

var OP_00_05 = Gunarso.expression(
    "(OP2000==1 && OP2005==1) ? OP_OP \
      : (OP2000==1 && OP2005==0) ? OP_NOP \
        :(OP2000==0 && OP2005==0) ? NOP_NOP \
          : NOP_OP", 
        {
        'OP2000': Gunarso.select('OP00'),
        'OP2005': Gunarso.select('OP05'),
        'OP_OP': Gunarso.select('blank').add(OP_OP),
        'OP_NOP': Gunarso.select('blank').add(OP_NOP),
        'NOP_NOP': Gunarso.select('blank').add(NOP_NOP),
        'NOP_OP': Gunarso.select('blank').add(NOP_OP),
        }
    ).rename(['OP_00_05']);

var OP_05_10 = Gunarso.expression(
  "(OP2005==1 && OP2010==1) ? OP_OP\
      : (OP2005==1 && OP2010==0) ? OP_NOP \
        :(OP2005==0 && OP2010==0) ? NOP_NOP \
          : NOP_OP", 
        {
        'OP2005': Gunarso.select('OP05'),
        'OP2010': Gunarso.select('OP10'),
        'OP_OP': Gunarso.select('blank').add(OP_OP),
        'OP_NOP': Gunarso.select('blank').add(OP_NOP),
        'NOP_NOP': Gunarso.select('blank').add(NOP_NOP),
        'NOP_OP': Gunarso.select('blank').add(NOP_OP),
        }
    ).rename(['OP_05_10']);


// Map.addLayer(OP_90_00.clip(totalarea).updateMask(OP_90_00), {min: 0, max: 4, palette: ['0000FF', '#00ffff', '#ff510f', '#ffec0d']}, 'OP_90_00');
// Map.addLayer(OP_00_05.clip(totalarea).updateMask(OP_00_05), {min: 0, max: 4, palette: ['0000FF', '#00ffff', '#ff510f', '#ffec0d']}, 'OP_00_05');
// Map.addLayer(OP_05_10.clip(totalarea).updateMask(OP_05_10), {min: 0, max: 4, palette: ['0000FF', '#00ffff', '#ff510f', '#ffec0d']}, 'OP_05_10');


// ############
// # Step 3: Preliminary data processing 
// # 1) Create 2000 Basemap  
// # 2) Fix inconsistencies for "NOP>OP, but no lossevents in between"
// # 3) Append the categorical maps, basemaps, and new lossyear layers 
// #    (00-05, 05-10) to Gunarso_intermediate band
// ############

// code NF, F, OPR, OP into numbers 
var NF_color = 1;
var F_color = 2;
var OPReplant_color = 3; 
var OP_color = 4; 
var OTH_color = 5;


// Create year_2000 classified layer of OP, F, NF  
var year_2000 = Gunarso.expression(
'(OP00 ==1)? OP\
  :((OP00==0) && treecover2000>=30)? F\
    :((OP00==0)&& treecover2000<30)? NF\
      :OTH',
    {  
      'OP': Gunarso.select('blank').add(OP_color),
      'F': Gunarso.select('blank').add(F_color),
      'NF': Gunarso.select('blank').add(NF_color),
      'OTH': Gunarso.select('blank').add(OTH_color),
      'OP00': Gunarso.select('OP00'),
      'treecover2000': Gunarso.select('treecover2000')
    }
).rename(['year_2000']);

//Create separate lossyear00_05 and lossyear05_10
Gunarso= Gunarso.addBands([OP_00_05, OP_05_10]);
var lossyear00_05= Gunarso.expression(
' OP_00_05== NOP_OP && (lossyear >5 || lossyear==0) ? random\
  :lossyear',
    {  
      'OP_00_05': Gunarso.select('OP_00_05'),
      'lossyear': Gunarso.select('lossyear'),
      'random': Gunarso.select('blank').add(99),
      'NOP_OP': NOP_OP
      // 'random': Gunarso.select('blank').add(Math.floor(Math.random()*5)+1)
    }
).rename(['lossyear00_05']);

var lossyear05_10= Gunarso.expression(
' OP_05_10==NOP_OP && (lossyear >10 || lossyear <=5) ? random\
  :lossyear',
    {  
      'OP_05_10': Gunarso.select('OP_05_10'),
      'lossyear': Gunarso.select('lossyear'),
      'random': Gunarso.select('blank').add(99),
      'NOP_OP': NOP_OP
      // 'random': Gunarso.select('blank').add(Math.floor(Math.random()*5)+6)
    }
).rename(['lossyear05_10']);

//Append the new categorical maps to Gunarso band 
var Gunarso_intermediate = ee.Image([lossYear]);
Gunarso_intermediate= Gunarso_intermediate.addBands([year_2000,blank, OP_00_05, OP_05_10, lossyear05_10,lossyear00_05]);


//Experimental Section 
var A_target = 21059772402.93213/4;

print(pixelcount(year_2000, Peninsula_outline));
var A2000 = area(year_2000.eq(OP_color), Peninsula_outline);
A2000 = ee.List(ee.Dictionary(A2000).get('year_2000'));
print('listA2000',A2000);

var G2001 = blank.where((lossYear.eq(1)).and(OP_00_05.eq(NOP_OP)),1); // binary layer of things to expand
// print(G2001);

// print(area(G2001, Peninsula_outline));
var A_current = ee.Number(A2000) + ee.Number(area(G2001, Peninsula_outline).get('blank'));
var A_expand = A_target.subtract(A_current);
print('A2000', A2000);
print('A2000 ee Number', ee.Number(A2000).add(ee.Number(A2000)));
print('A_target', A_target);
print('type test', area(G2001, Peninsula_outline));
