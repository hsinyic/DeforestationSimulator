/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var gfcImage = ee.Image("UMD/hansen/global_forest_change_2015"),
    countries = ee.FeatureCollection("ft:1tdSwUL7MVpOauSgRzqVTOwdfy17KDbw-1d9omPw"),
    Peninsula_outline = ee.FeatureCollection("ft:1qXLCkXAj4shgixeHmj-yDVAYrVhtkF2iJ94OBp3N"),
    geometry = /* color: d63000 */ee.Geometry.Point([102.10693359375, 3.973860975839102]),
    Pen10 = ee.FeatureCollection("ft:1xabXcdjDWY8PCYLjAO6zH07XTczWVKqGcNVVQI3Y"),
    Pen05 = ee.FeatureCollection("ft:1YZK7dCxaKKF5WneTc3hcNyB1ss6nVRkl818pf7zI"),
    Pen90 = ee.FeatureCollection("ft:1zaZ7Z6NB0aGX5IfFTvWrVe3BJA5YrbCBfP85Y5de"),
    Pen00 = ee.FeatureCollection("ft:13VBea1Xy9bPFVVOGRGFT5gDA-Q8lE803AbNQyU5m");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
Map.setCenter(102.10693359375, 3.973860975839102, 10);
// ############
// # Step 1: Load data / Define Statistical Functions
// ############
var scale = ee.Number(500); 
var scale_square = scale.multiply(scale); 
var pixelcount = function(image, shape, group){
  var Stat = image.addBands(image);
  var r = Stat.reduceRegion({
    reducer: ee.Reducer.count().group(1),
    scale: scale,
    geometry: shape
  });
  var list = ee.List(ee.Dictionary(r).get('groups'));
  return ee.Dictionary(list.get(group)).get('count');
};
var totalarea = Peninsula_outline; 
var lossYear = gfcImage.select(['lossyear']);
var treecover2000 = gfcImage.select(['treecover2000']);
var blank = lossYear.multiply(0).rename(['blank']).clip(totalarea);
var lossindicator = blank.where(lossYear.gte(1).and(lossYear.lte(0)), 1).clip(totalarea).rename(['lossindicator']); // lossyear indicator of 0 and 
// //add color scheme 
var db= String('0000FF');
var lb= String('#11ffff');
var red=String('ff510f');
var lr = String("#ff8f7d");
var yellow=String('#fff832');
var gr= String('#4cff62');
var whi=String('#181716');
var black = String('#101010');
// Convert Gunarso vector maps to a raster, Peninsula, data preprocessing 
var OP90_raster = Pen90.reduceToImage({properties: ['Ha'],reducer: ee.Reducer.first()}).multiply(0).add(1);
var OP00_raster = Pen00.reduceToImage({properties: ['Ha'],reducer: ee.Reducer.first()}).multiply(0).add(1);
var OP05_raster = Pen05.reduceToImage({properties: ['Ha'],reducer: ee.Reducer.first()}).multiply(0).add(1);
var OP10_raster = Pen10.reduceToImage({properties: ['Ha'],reducer: ee.Reducer.first()}).multiply(0).add(1);
var OP90_raster = blank.where(OP90_raster.eq(1), 1);
var OP00_raster = blank.where(OP00_raster.eq(1), 1).where(OP90_raster.eq(1), 1);
var OP05_raster = blank.where(OP05_raster.eq(1), 1).where(OP00_raster.eq(1), 1);
var OP10_raster = blank.where(OP10_raster.eq(1), 1).where(OP05_raster.eq(1), 1);
var OP90 = blank.where(OP90_raster.eq(1), 1).rename(['OP90']);
var OP00 = blank.where(OP00_raster.eq(1), 1).rename(['OP00']);
var OP05 = blank.where(OP05_raster.eq(1), 1).rename(['OP05']);
var OP10 = blank.where(OP10_raster.eq(1), 1).rename(['OP10']);

// ####################
// # Step 2: Intermediate output for 1990-2000, 2000-2005, 2005-2010 
// ####################
var Gunarso_age = ee.Image([lossYear,OP90, OP00, OP05,
                          OP10, treecover2000,blank,lossindicator]);

var yr = ee.List.sequence(0, 10, 1);

// Palm oil age map 
var age = function(t){
  t = ee.Number(t);
  // boundaries of age map
  var agemap = blank.where(OP10.eq(1),1);
  agemap = agemap.updateMask(agemap);
  var ageNOP_NOP = Gunarso_age.expression(
  ' (lossindicator ==0 && t>=5)? t-5 \
  : (lossindicator ==0 && t< 5)? 26 \
    : (lossindicator == 1  && t< lossYear )? 26 \
    : (lossindicator == 1  && t>=lossYear )? t-lossYear \
      :OTH',
      {  
        'lossYear': Gunarso_age.select('lossyear'),
        'lossindicator': Gunarso_age.select('lossindicator'),
        't': t,
        'OTH': Gunarso_age.select('blank').add(100),
      }
  );
  var ageNOP_OP = Gunarso_age.expression(
  ' lossindicator ==0 ? t+5 \
    : (lossindicator == 1  && t< lossYear )? (25-t+lossYear) \
    : (lossindicator == 1  && t>=lossYear )? (t-lossYear) \
      :OTH',
      {  
        'lossYear': Gunarso_age.select('lossyear'),
        'lossindicator': Gunarso_age.select('lossindicator'),
        't': t,
        'OTH': Gunarso_age.select('blank').add(100),
      }
  );

  var ageOP_OP =Gunarso_age.expression(
  ' lossindicator ==0 ? t+13 \
    : lossindicator == 1  && t< lossYear ? (25-t+lossYear) \
    : lossindicator == 1  && t>=lossYear ? (t-lossYear) \
      :OTH',
      {  
        'lossYear': Gunarso_age.select('lossyear'),
        'lossindicator': Gunarso_age.select('lossindicator'),
        't': t,
        'OTH': Gunarso_age.select('blank').add(100),
      }
  );
  
  agemap = agemap
  .where(OP90.eq(0).and(OP00.eq(0)), ageNOP_NOP)
  .where(OP90.eq(0).and(OP00.eq(1)), ageNOP_OP)
  .where(OP90.eq(1).and(OP00.eq(1)), ageOP_OP);
  
  var agemap2 = agemap
  .where(lossindicator.eq(0).and(OP00.eq(0)), ageNOP_NOP)
  .where(lossindicator.eq(0).and(OP00.eq(1)), ageNOP_OP)
  .where(lossindicator.eq(1).and(OP00.eq(1)), ageOP_OP);



  return(ee.Image(agemap));
};
var Gunarso_age = yr.map(age);
print(Gunarso_age);

// Export.image.toDrive({
//   image: lossYear,
//   description: 'lossYear',
//   scale: 30,
//   region: totalarea.geometry().bounds(),
//   maxPixels: 9e12
// });

for (var t =10; t >=0; --t){
  var img = ee.Image(Gunarso_age.get(t));
  Map.addLayer(img, {min: 0, max: 30,
    palette:[db, lb, gr, yellow, red, whi ]}, "test");
}
