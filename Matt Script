// 2000-feb-21 Landsat 7 scene.
var landsat = ee.Image('LANDSAT/LE7_L1T_TOA/LE70630462000052EDC00');
print('landsat', landsat);
var bandNames = landsat.bandNames();
print('Band names: ', bandNames); // ee.List of band names

// Add a cloud score band.  It is automatically called 'cloud'.
var scored = ee.Algorithms.Landsat.simpleCloudScore(landsat);

// Create a mask from the cloud score and combine it with the image mask.
var mask = scored.select(['cloud']).lte(10);
Map.addLayer(mask, {}, 'mask');
Map.setCenter(-155.75, 20.25, 9);
print(mask);

//add cloud bands and a blank layer to pro_grass layer 
var pro_grass = pro_grass.addBands(mask);

// check the names of the band, rename if needed 

// image expression, this outputs pro_grass_cloudfree, 
//which excludes pixel that is not cloud free 
var pro_grass_cloudfree = pro_grass.expression(
      "(b('cloud') == 1) ? b('grass')" +
      ": b('blank') "
);

var All_image = Landsat.addBands(pro_grass_cloudfree);

//Now put the neighboring 



// Load input imagery: Landsat 7 5-year composite.
var image = ee.Image('LE7_TOA_5YEAR/2008_2012');

// Load a FeatureCollection of counties in Maine.
var maineCounties = ee.FeatureCollection('ft:1S4EB6319wWW2sWQDPhDvmSBIVrD3iEmCLYB7nMM')
  .filterMetadata('StateName', 'equals', 'Maine');

// Add reducer output to the Features in the collection.
var maineMeansFeatures = image.reduceRegions({
  collection: maineCounties,
  reducer: ee.Reducer.mean(),
  scale: 30,
});

// Print the first feature, to illustrate the result.
print(ee.Feature(maineMeansFeatures.first()).select(image.bandNames()));

